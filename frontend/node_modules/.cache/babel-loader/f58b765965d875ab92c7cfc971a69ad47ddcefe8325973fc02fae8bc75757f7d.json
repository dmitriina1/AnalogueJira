{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\AnalogueJiras\\\\frontend\\\\src\\\\pages\\\\Project.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { getBoards, createBoard } from '../api';\nimport Modal from '../components/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Project() {\n  _s();\n  const {\n    projectId\n  } = useParams();\n  const [boards, setBoards] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [newBoard, setNewBoard] = useState('');\n  const fetchBoards = async () => {\n    const data = await getBoards(projectId);\n    setBoards(data);\n  };\n  useEffect(() => {\n    fetchBoards();\n  }, [projectId]);\n  const handleCreate = async () => {\n    await createBoard(projectId, newBoard);\n    setShowModal(false);\n    setNewBoard('');\n    fetchBoards();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Boards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary mb-3\",\n      onClick: () => setShowModal(true),\n      children: \"New Board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: boards.map(b => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/board/${b.id}`,\n          children: b.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)\n      }, b.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), showModal && /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"New Board\",\n      onClose: () => setShowModal(false),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        placeholder: \"Board name\",\n        value: newBoard,\n        onChange: e => setNewBoard(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success mt-2\",\n        onClick: handleCreate,\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(Project, \"0zuTbAEmieV2zOTr67ikBJpDIVc=\", false, function () {\n  return [useParams];\n});\n_c = Project;\nexport default Project;\nvar _c;\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Link","getBoards","createBoard","Modal","jsxDEV","_jsxDEV","Project","_s","projectId","boards","setBoards","showModal","setShowModal","newBoard","setNewBoard","fetchBoards","data","handleCreate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","b","to","id","name","title","onClose","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/AnalogueJiras/frontend/src/pages/Project.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { getBoards, createBoard } from '../api';\r\nimport Modal from '../components/Modal';\r\n\r\nfunction Project() {\r\n    const { projectId } = useParams();\r\n    const [boards, setBoards] = useState([]);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [newBoard, setNewBoard] = useState('');\r\n\r\n    const fetchBoards = async () => {\r\n        const data = await getBoards(projectId);\r\n        setBoards(data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchBoards();\r\n    }, [projectId]);\r\n\r\n    const handleCreate = async () => {\r\n        await createBoard(projectId, newBoard);\r\n        setShowModal(false);\r\n        setNewBoard('');\r\n        fetchBoards();\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-4\">\r\n            <h2>Boards</h2>\r\n            <button className=\"btn btn-primary mb-3\" onClick={() => setShowModal(true)}>New Board</button>\r\n            <ul className=\"list-group\">\r\n                {boards.map(b => (\r\n                    <li key={b.id} className=\"list-group-item\">\r\n                        <Link to={`/board/${b.id}`}>{b.name}</Link>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n\r\n            {showModal && (\r\n                <Modal title=\"New Board\" onClose={() => setShowModal(false)}>\r\n                    <input className=\"form-control\" placeholder=\"Board name\" value={newBoard} onChange={e => setNewBoard(e.target.value)} />\r\n                    <button className=\"btn btn-success mt-2\" onClick={handleCreate}>Create</button>\r\n                </Modal>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Project;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
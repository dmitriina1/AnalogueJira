{"ast":null,"code":"// src/api.js\nconst API_URL = \"http://localhost:5000/api\";\nexport async function apiRequest(endpoint, method = \"GET\", data, token) {\n  const headers = {\n    \"Content-Type\": \"application/json\"\n  };\n  if (token) headers[\"Authorization\"] = `Bearer ${token}`;\n  const res = await fetch(`${API_URL}${endpoint}`, {\n    method,\n    headers,\n    body: data ? JSON.stringify(data) : undefined\n  });\n  if (!res.ok) {\n    const err = await res.json().catch(() => ({}));\n    throw new Error(err.msg || \"API error\");\n  }\n  return res.json();\n}","map":{"version":3,"names":["API_URL","apiRequest","endpoint","method","data","token","headers","res","fetch","body","JSON","stringify","undefined","ok","err","json","catch","Error","msg"],"sources":["C:/Users/Lenovo/Desktop/AnalogueJiras/frontend/src/api.js"],"sourcesContent":["// src/api.js\r\nconst API_URL = \"http://localhost:5000/api\";\r\n\r\nexport async function apiRequest(endpoint, method = \"GET\", data, token) {\r\n  const headers = { \"Content-Type\": \"application/json\" };\r\n  if (token) headers[\"Authorization\"] = `Bearer ${token}`;\r\n\r\n  const res = await fetch(`${API_URL}${endpoint}`, {\r\n    method,\r\n    headers,\r\n    body: data ? JSON.stringify(data) : undefined,\r\n  });\r\n\r\n  if (!res.ok) {\r\n    const err = await res.json().catch(() => ({}));\r\n    throw new Error(err.msg || \"API error\");\r\n  }\r\n\r\n  return res.json();\r\n}\r\n"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAG,2BAA2B;AAE3C,OAAO,eAAeC,UAAUA,CAACC,QAAQ,EAAEC,MAAM,GAAG,KAAK,EAAEC,IAAI,EAAEC,KAAK,EAAE;EACtE,MAAMC,OAAO,GAAG;IAAE,cAAc,EAAE;EAAmB,CAAC;EACtD,IAAID,KAAK,EAAEC,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUD,KAAK,EAAE;EAEvD,MAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGR,OAAO,GAAGE,QAAQ,EAAE,EAAE;IAC/CC,MAAM;IACNG,OAAO;IACPG,IAAI,EAAEL,IAAI,GAAGM,IAAI,CAACC,SAAS,CAACP,IAAI,CAAC,GAAGQ;EACtC,CAAC,CAAC;EAEF,IAAI,CAACL,GAAG,CAACM,EAAE,EAAE;IACX,MAAMC,GAAG,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC9C,MAAM,IAAIC,KAAK,CAACH,GAAG,CAACI,GAAG,IAAI,WAAW,CAAC;EACzC;EAEA,OAAOX,GAAG,CAACQ,IAAI,CAAC,CAAC;AACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}